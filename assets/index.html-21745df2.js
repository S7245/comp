import{_ as o,M as p,p as r,q as l,R as s,t as n,N as e,a1 as t}from"./framework-8c5a1526.js";const i={},c=s("h1",{id:"react",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#react","aria-hidden":"true"},"#"),n(" React")],-1),d=s("h2",{id:"开始",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#开始","aria-hidden":"true"},"#"),n(" 开始")],-1),u={href:"https://react.docschina.org/learn/start-a-new-react-project#remix",target:"_blank",rel:"noopener noreferrer"},k={href:"https://react.docschina.org/learn/start-a-new-react-project#gatsby",target:"_blank",rel:"noopener noreferrer"},v=s("code",null,"内容管理系统，Content Management System",-1),h={href:"https://react.docschina.org/learn/start-a-new-react-project#expo",target:"_blank",rel:"noopener noreferrer"},m=s("p",null,[s("strong",null,"代码检查(Linting)")],-1),g={href:"https://eslint.org/",target:"_blank",rel:"noopener noreferrer"},b=t(`<h2 id="基础教程" tabindex="-1"><a class="header-anchor" href="#基础教程" aria-hidden="true">#</a> 基础教程</h2><h3 id="创建-next-js-app" tabindex="-1"><a class="header-anchor" href="#创建-next-js-app" aria-hidden="true">#</a> 创建 Next.js App</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 安装 [react-devtools](https://www.npmjs.com/package/react-devtools)包</span>
<span class="token function">pnpm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> react-devtools
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,3),f={href:"https://nextjs.org/",target:"_blank",rel:"noopener noreferrer"},_=s("code",null,"Next.js",-1),y=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 创建Next.js项目</span>
npx create-next-app@latest
<span class="token comment"># Starts the development server.</span>
<span class="token function">npm</span> run dev
<span class="token comment"># Builds the app for production.</span>
<span class="token function">npm</span> run build
<span class="token comment"># Runs the built app in production mode.</span>
<span class="token function">npm</span> start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),x={href:"https://nextjs.org/learn/foundations/about-nextjs",target:"_blank",rel:"noopener noreferrer"},j=s("br",null,null,-1),w={href:"https://nextjs.org/docs/app/building-your-application/deploying",target:"_blank",rel:"noopener noreferrer"},S=s("code",null,"Node.js",-1),q=s("code",null,"serverless",-1),C=s("code",null,"自己的服务器",-1),N=s("br",null,null,-1),L={href:"https://nextjs.org/docs/pages/building-your-application/deploying/static-exports",target:"_blank",rel:"noopener noreferrer"},R=s("h3",{id:"页面之前导航",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#页面之前导航","aria-hidden":"true"},"#"),n(" 页面之前导航")],-1),I={href:"https://nextjs.org/docs/api-reference/next/link",target:"_blank",rel:"noopener noreferrer"},P=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// index.js</span>

<span class="token keyword">import</span> Link <span class="token keyword">from</span> <span class="token string">&quot;next/link&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">FirstPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>First page<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>h2<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>Link href<span class="token operator">=</span><span class="token string">&quot;/&quot;</span><span class="token operator">&gt;</span>Back Home<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// /posts/first-post.js</span>

<span class="token operator">&lt;</span>h1 className<span class="token operator">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>title<span class="token punctuation">}</span><span class="token operator">&gt;</span>
	Read <span class="token operator">&lt;</span>Link href<span class="token operator">=</span><span class="token string">&quot;/posts/first-post&quot;</span><span class="token operator">&gt;</span> <span class="token keyword">this</span> page<span class="token operator">!</span><span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="assets-metadata-css" tabindex="-1"><a class="header-anchor" href="#assets-metadata-css" aria-hidden="true">#</a> Assets,Metadata,CSS</h3>`,2),H=s("li",null,[n("在"),s("code",null,"next.js"),n("中添加静态文件。")],-1),M={href:"https://nextjs.org/docs/pages/building-your-application/routing/custom-app",target:"_blank",rel:"noopener noreferrer"},B={href:"https://nextjs.org/docs/basic-features/built-in-css-support#adding-a-global-stylesheet",target:"_blank",rel:"noopener noreferrer"},E=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>.
├── README.md
├── package-lock.json
├── package.json
├── pages
│   ├── index.js
│   └── posts
│       └── first-post.js
├── public
│   ├── favicon.ico
│   ├── images
│   │   └── profile.jpg &lt;=== 资源文件在/public/文件夹里
│   └── vercel.svg
└── styles   &lt;===== 这里创建CSS
    ├── Home.module.css
    └── global.css &lt;===== 全局CSS
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建Image的组件：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> Image <span class="token keyword">from</span> <span class="token string">&quot;next/image&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">YourComponent</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>Image src<span class="token operator">=</span><span class="token string">&quot;/images/profile.jpg&quot;</span>
        height<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">144</span><span class="token punctuation">}</span>
        width<span class="token operator">=</span><span class="token punctuation">{</span><span class="token number">144</span><span class="token punctuation">}</span>
        alt<span class="token operator">=</span><span class="token string">&quot;Your Name&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>Image<span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),F=s("li",null,[n("每个页面中自定义"),s("code",null,"<head>"),n("。")],-1),G={href:"https://nextjs.org/docs/basic-features/built-in-css-support#adding-component-level-css",target:"_blank",rel:"noopener noreferrer"},A=t(`<p><code>Next.js</code>页面中接入第三方JS：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// pages/posts/first-post.js</span>

<span class="token keyword">import</span> Head <span class="token keyword">from</span> <span class="token string">&quot;next/head&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> Script <span class="token keyword">from</span> <span class="token string">&quot;next/script&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">FirstPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
        <span class="token operator">&lt;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>Head<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>Head<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>Script
                src<span class="token operator">=</span><span class="token string">&quot;https://connect.facebook.net/en_US/sdk.js&quot;</span>
                strategy<span class="token operator">=</span><span class="token string">&quot;lazyOnload&quot;</span>
                onLoad<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
                    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">script loaded correctly, window.FB has been populated</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span>
            <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="layout-component" tabindex="-1"><a class="header-anchor" href="#layout-component" aria-hidden="true">#</a> Layout Component</h4>`,3),D={href:"https://nextjs.org/docs/basic-features/built-in-css-support#adding-component-level-css",target:"_blank",rel:"noopener noreferrer"},O=s("code",null,"XXX.module.css",-1),T=s("br",null,null,-1),V=s("code",null,"CSS Module",-1),J=s("code",null,"ClassName",-1),U=s("code",null,"ClassName",-1),W=t(`<p>创建：<code>layout.js</code>、<code>layout.module.css</code>:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>.
├── components
│   ├── layout.js
│   └── layout.module.css
└── pages
    ├── index.js
    └── posts
        └── first-post.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 在 layout.js 中创建 Layout Component。</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Layout</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> children <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 在 first-post.js 中，添加 Layout Component</span>
<span class="token keyword">import</span> Layout <span class="token keyword">from</span> <span class="token string">&#39;../../components/layout&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">FirstPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>Layout<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>Head<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span>First Post<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>Head<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>First Post<span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>h2<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>Link href<span class="token operator">=</span><span class="token string">&quot;/&quot;</span><span class="token operator">&gt;</span>← Back to home<span class="token operator">&lt;</span><span class="token operator">/</span>Link<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>h2<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Layout<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在<code>layout.module.css</code>中添加：</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.container</span> <span class="token punctuation">{</span>
  <span class="token property">max-width</span><span class="token punctuation">:</span> 36rem<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 0 1rem<span class="token punctuation">;</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> 3rem auto 6rem<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>把 css 添加到 <code>layout.js</code>中：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> styles <span class="token keyword">from</span> <span class="token string">&#39;./layout.module.css&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Layout</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> children <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>container<span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="global-styles" tabindex="-1"><a class="header-anchor" href="#global-styles" aria-hidden="true">#</a> Global Styles</h4>`,8),X=s("code",null,"CSS Modules",-1),Y={href:"https://nextjs.org/docs/basic-features/built-in-css-support#adding-a-global-stylesheet",target:"_blank",rel:"noopener noreferrer"},z=t(`<p>The reason that global CSS can&#39;t be imported outside of <code>pages/_app.js</code> is that global CSS affects all elements on the page.</p><p>If you were to navigate from the homepage to the <code>/posts/first-post</code> page, global styles from the homepage would affect <code>/posts/first-post</code> unintentionally.</p><h4 id="css工具类" tabindex="-1"><a class="header-anchor" href="#css工具类" aria-hidden="true">#</a> CSS工具类</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>// Create styles/utils.module.css, Second, 
// let’s create a set of CSS utility classes (for text styles) 
// that can be re-used across multiple components.

.
└── styles
    ├── Home.module.css
    ├── global.css
    └── utils.module.css
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pre-rendering-and-data-fetching" tabindex="-1"><a class="header-anchor" href="#pre-rendering-and-data-fetching" aria-hidden="true">#</a> Pre-rendering and Data-fetching</h3>`,5),K=s("li",null,"Pre-rendering： 静态渲染、服务端渲染",-1),Q=s("li",null,"静态渲染：有数据、无数据",-1),Z={href:"https://nextjs.org/docs/basic-features/data-fetching#getstaticprops-static-generation",target:"_blank",rel:"noopener noreferrer"},$=t('<p>We recommend using <code>Static Generation (with and without data)</code> whenever possible because your page can be built once and served by CDN, which makes it much faster than having a server render the page on every request.</p><p>You should ask yourself: &quot;Can I pre-render this page ahead of a user&#39;s request?&quot; If the answer is yes, then you should choose Static Generation.</p><p>On the other hand, Static Generation is not a good idea if you cannot pre-render a page ahead of a user&#39;s request. Maybe your page shows frequently updated data, and the page content changes on every request.</p><p>In that case, you can use Server-side Rendering. It will be slower, but the pre-rendered page will always be up-to-date. Or you can skip pre-rendering and use client-side JavaScript to populate frequently updated data.</p><p><strong>getStaticProps</strong></p><p>If you do not need to pre-render the data, you can also use Client-side Rendering.</p><p><img src="https://nextjs.org/static/images/learn/data-fetching/client-side-rendering.png" alt=""></p><p>This approach works well for user dashboard pages.</p><p><strong>getServerSideProps</strong></p><p>If you need to fetch data at <code>request time</code> instead of at <code>build time</code>.</p><p><img src="https://nextjs.org/static/images/learn/data-fetching/server-side-rendering-with-data.png" alt=""></p><h3 id="dynamic-routes-动态路由" tabindex="-1"><a class="header-anchor" href="#dynamic-routes-动态路由" aria-hidden="true">#</a> Dynamic Routes(动态路由)</h3><p><img src="https://nextjs.org/static/images/learn/dynamic-routes/page-path-external-data.png" alt=""></p><p><img src="https://nextjs.org/static/images/learn/dynamic-routes/how-to-dynamic-routes.png" alt=""></p><p><strong>Catch-all Routes</strong></p><p>Dynamic routes can be extended to catch all paths by adding three dots (...) inside the brackets.</p><p><code>pages/posts/[...id].js</code>: matches <code>/posts/a</code>, but also <code>/posts/a/b</code>, <code>/posts/a/b/c</code> and so on.</p><p><strong>API Routes</strong></p><h2 id="react-组件" tabindex="-1"><a class="header-anchor" href="#react-组件" aria-hidden="true">#</a> React 组件</h2>',19),ss={href:"https://nextjs.org/docs/api-reference/next/head",target:"_blank",rel:"noopener noreferrer"},ns={href:"https://nextjs.org/docs/basic-features/script",target:"_blank",rel:"noopener noreferrer"},as=s("h2",{id:"useful-libs",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#useful-libs","aria-hidden":"true"},"#"),n(" Useful Libs")],-1),es={href:"https://github.com/jonschlinkert/gray-matter",target:"_blank",rel:"noopener noreferrer"},ts={href:"https://swr.vercel.app/",target:"_blank",rel:"noopener noreferrer"},os={href:"https://date-fns.org/",target:"_blank",rel:"noopener noreferrer"},ps=s("h2",{id:"node-js",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#node-js","aria-hidden":"true"},"#"),n(" Node.js")],-1),rs={href:"https://nodejs.org/api/fs.html#fsreaddirsyncpath-options",target:"_blank",rel:"noopener noreferrer"},ls={href:"https://nodejs.org/api/path.html#pathjoinpaths",target:"_blank",rel:"noopener noreferrer"},is={href:"https://www.npmjs.com/package/gray-matter",target:"_blank",rel:"noopener noreferrer"};function cs(ds,us){const a=p("ExternalLinkIcon");return r(),l("div",null,[c,d,s("ul",null,[s("li",null,[s("a",u,[n("Remix"),e(a)]),n("：是一个具有嵌套路由的全栈式 React 框架。 它可以把你的应用分成嵌套部分，该嵌套部分可以并行加载数据并响应用户操作进行刷新。")]),s("li",null,[s("a",k,[n("Gatsby"),e(a)]),n("：是一个快速的支持 CMS("),v,n(") 的网站的 React 框架。")]),s("li",null,[s("a",h,[n("Expo"),e(a)]),n(" ：是一个 React 框架，可以让你创建具有真正原生 UI 的应用，包括 Android、iOS，以及 Web 应用。")])]),m,s("ul",null,[s("li",null,[s("a",g,[n("ESLint"),e(a)]),n("：是一款流行且开源的 JavaScript 代码检查工具。")])]),b,s("p",null,[n("创建"),s("a",f,[n("Next.js"),e(a)]),n("框架。"),_,n(" 是一个全栈式的 React 框架。")]),y,s("blockquote",null,[s("p",null,[s("a",x,[n("Next.js 教程"),e(a)]),n(),j,s("a",w,[n("Next.js 应用"),e(a)]),n(" 部署到 "),S,n("、"),q,n(" 和"),C,n("。"),N,s("a",L,[n("静态Next.js 应用"),e(a)]),n(" 部署在任何支持静态服务的地方。")])]),R,s("p",null,[s("a",I,[n("<Link>"),e(a)])]),P,s("ul",null,[H,s("li",null,[n("在"),s("a",M,[n("pages/_app.js"),e(a)]),n("中添加"),s("a",B,[n("全局CSS"),e(a)])])]),E,s("ul",null,[F,s("li",null,[n("用"),s("a",G,[n("CSS Modules"),e(a)]),n("创建自定义React组件。")])]),A,s("blockquote",null,[s("p",null,[n("要使用"),s("a",D,[n("CSS Modules"),e(a)]),n("，CSS文件命名结尾规则："),O,n("。"),T,V,n("会自动生成唯一的"),J,n("，所以不用担心"),U,n("命名冲突。")])]),W,s("p",null,[X,n(" are useful for component-level styles. To load "),s("a",Y,[n("Global CSS"),e(a)]),n(" to application")]),z,s("ul",null,[K,Q,s("li",null,[s("a",Z,[n("getStaticProps"),e(a)])])]),$,s("ul",null,[s("li",null,[s("a",ss,[n("<Head>"),e(a)])]),s("li",null,[s("a",ns,[n("<Script>"),e(a)])])]),as,s("ul",null,[s("li",null,[s("a",es,[n("gray-matter"),e(a)]),n(":")]),s("li",null,[s("a",ts,[n("SWR"),e(a)]),n("：用于数据请求的 React Hooks 库。")]),s("li",null,[s("a",os,[n("date-fns"),e(a)]),n("：format the date.")])]),ps,s("ul",null,[s("li",null,[s("a",rs,[n("fs"),e(a)]),n(" is a Node.js module that lets you read files from the file system.")]),s("li",null,[s("a",ls,[n("path"),e(a)]),n(" is a Node.js module that lets you manipulate file paths.")]),s("li",null,[s("a",is,[n("matter"),e(a)]),n(" is a library that lets you parse the metadata in each markdown file.")])])])}const vs=o(i,[["render",cs],["__file","index.html.vue"]]);export{vs as default};
