import{_ as t,M as o,p as a,q as r,R as e,t as d,N as i,a1 as l}from"./framework-8c5a1526.js";const n={},p=l('<h1 id="javascript" tabindex="-1"><a class="header-anchor" href="#javascript" aria-hidden="true">#</a> JavaScript</h1><ul><li><code>.js</code>：这是一个 JavaScript 文件。</li><li><code>.jsx</code>：表示这是一个 JavaScript XML 文件。</li></ul><blockquote><p><code>JavaScript XML</code> 是React组件内部构建标签的类XML语法。 可以理解为React提供的语法糖，可以让编译器更方便快速的选择编译方式。<br> JavaScript 是能够被浏览器直接识别的， <code>JavaScript XML</code>需要经过编译器（webpack等）转换成 JavaScript。</p></blockquote><ul><li><code>.tx</code>： 表示这是一个 TypeScript 文件。</li><li><code>.tsx</code>：表示这是一个 TypeScript 文件，但它同时还包含了 <code>JavaScript XML（JSX）</code>。</li></ul><blockquote><p><code>.ts</code> 的文件，内容上不支持 <code>&lt;div&gt;</code> 这种HTML语法，会报错的， 而且VS Code这类代码编辑器也不会提供相关代码提示和补全的功能。 反之 <code>.tsx</code> 的文件，在遵循TypeScript的基础上，支持 JSX 语法。<br> 辅助的函数文件使用<code>.ts</code>即可；React组件方面，还是必须使用<code>.tsx</code>。</p></blockquote>',5),s={href:"https://www.typescriptlang.org/zh/",target:"_blank",rel:"noopener noreferrer"};function _(S,u){const c=o("ExternalLinkIcon");return a(),r("div",null,[p,e("p",null,[e("a",s,[d("TypeScript官方文档"),i(c)])])])}const v=t(n,[["render",_],["__file","index.html.vue"]]);export{v as default};
